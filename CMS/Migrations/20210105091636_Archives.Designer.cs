// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210105091636_Archives")]
    partial class Archives
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CMS.Data.Entities.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CurrentVersionAttachmentVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("AttachmentId");

                    b.HasIndex("CurrentVersionAttachmentVersionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("CMS.Data.Entities.AttachmentVersion", b =>
                {
                    b.Property<int>("AttachmentVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("AttachmentVersionId");

                    b.HasIndex("AttachmentId");

                    b.ToTable("AttachmentVersions");
                });

            modelBuilder.Entity("CMS.Data.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Semester")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.HasIndex("Name");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CMS.Data.Entities.CourseArchive", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Semester")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("CourseArchive");
                });

            modelBuilder.Entity("CMS.Data.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CMS.Data.Entities.SubjectArchive", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseArchiveCourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseArchiveCourseId");

                    b.ToTable("SubjectArchive");
                });

            modelBuilder.Entity("CMS.Data.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CMS.Data.Entities.Attachment", b =>
                {
                    b.HasOne("CMS.Data.Entities.AttachmentVersion", "CurrentVersion")
                        .WithMany()
                        .HasForeignKey("CurrentVersionAttachmentVersionId");

                    b.HasOne("CMS.Data.Entities.Subject", null)
                        .WithMany("Attachments")
                        .HasForeignKey("SubjectId");

                    b.Navigation("CurrentVersion");
                });

            modelBuilder.Entity("CMS.Data.Entities.AttachmentVersion", b =>
                {
                    b.HasOne("CMS.Data.Entities.Attachment", null)
                        .WithMany("Versions")
                        .HasForeignKey("AttachmentId");
                });

            modelBuilder.Entity("CMS.Data.Entities.Subject", b =>
                {
                    b.HasOne("CMS.Data.Entities.Course", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("CMS.Data.Entities.SubjectArchive", b =>
                {
                    b.HasOne("CMS.Data.Entities.CourseArchive", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CourseArchiveCourseId");
                });

            modelBuilder.Entity("CMS.Data.Entities.Attachment", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("CMS.Data.Entities.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CMS.Data.Entities.CourseArchive", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CMS.Data.Entities.Subject", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
